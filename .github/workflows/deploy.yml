name: Terraform CI/CD

on:
  push:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}  # Ensure this is correctly set
  REGION: us-central1
  REPO_NAME: docker-repo
  IMAGE_NAME: iris-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup GCP
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}  # Service Account key secret
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Set GCP project
      run: |
        echo "Setting project to ${{ secrets.GCP_PROJECT }}"
        gcloud config set project ${{ secrets.GCP_PROJECT }}  # Correctly set project ID

    - name: Enable required GCP services
      run: |
        gcloud services enable \
          artifactregistry.googleapis.com \
          run.googleapis.com \
          composer.googleapis.com \
          dataflow.googleapis.com \
          bigquery.googleapis.com \
          compute.googleapis.com \
          monitoring.googleapis.com \
          serviceusage.googleapis.com \
          --project=${{ secrets.GCP_PROJECT }}

    - name: Build and Push Docker
      run: |
        cd api
        gcloud auth configure-docker ${REGION}-docker.pkg.dev
        docker build -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:latest .
        docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:latest

        
    - name: Terraform Apply
      run: |
        terraform init -backend-config="bucket=gcp-state-terraform"
        terraform apply -auto-approve \
          -var="project_id=${PROJECT_ID}" \
          -var="service_account_email=terraform-gcp-pipeline@${PROJECT_ID}.iam.gserviceaccount.com"

